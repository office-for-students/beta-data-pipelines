# DevOps Pipeline definition for the OFS Beta Backend Data Pipeline 

#Disable CI
trigger: none

#Disable PR
pr: none

# Build Agent Resources
pool:
  vmImage: 'windows-latest'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
      
# Build Process Tree
steps:

# Enforce Python Version (see above)
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'


- task: PythonScript@0
  displayName: 'Download latest HESA archive'
  inputs:
    scriptSource: 'inline'
    script: |
      """Downlaod the latest archive from HESA"""
      import urllib.request

      hdr = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',
      'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
      'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
      'Accept-Encoding': 'none',
      'Accept-Language': 'en-US,en;q=0.8',
      'Connection': 'keep-alive'}

      url = '$(HesaURL)'

      print('Fetching file...')

      hesa_request = urllib.request.Request(url, headers=hdr)
      hesa_response = urllib.request.urlopen(hesa_request)
      
      print('Beginning file download...')

      with open(r'$(Agent.TempDirectory)\hesa_data.zip', 'wb') as f:
          while True:
              data = hesa_response.read(1024)
              if not data:
                  break
              f.write(data)

      print('Download complete!')


- task: ExtractFiles@1
  displayName: Extract Hesa Archive
  inputs:
    archiveFilePatterns: '$(Agent.TempDirectory)\hesa_data.zip'
    destinationFolder: '$(Agent.TempDirectory)\latest_hesa_data'
    cleanDestinationFolder: false


- task: PythonScript@0
  displayName: 'Find latest kis.xml'
  inputs:
    scriptSource: 'inline'
    script: |
      """Find the latest kis.xml from the HESA archive"""
      import glob
      import shutil
  
      print('Looking for file...')

      for file in glob.glob(r'$(Agent.TempDirectory)\latest_hesa_data\on_*'):
          for kis_file in glob.glob(file + '\\kis*.xml'):
              print('Found matching file: ' + kis_file)
              print('Moving matching file...')

          shutil.copy(kis_file, r'$(Agent.TempDirectory)\latest.xml')

      print('Found latest file!')


- task: PythonScript@0
  displayName: 'Archive latest kis xml file'
  inputs:
    scriptSource: 'inline'
    script: |
      """Archive the latest HESA kis xml file"""
      import gzip
      import shutil
  
      print('Archiving file...')

      with open(r'$(Agent.TempDirectory)\latest.xml', 'rb') as f_in:
          with gzip.open(r'$(Agent.TempDirectory)\latest.xml.gz', 'wb') as f_out:
              shutil.copyfileobj(f_in, f_out)

      print('Archive complete!')


- task: AzureFileCopy@3
  displayName: 'Copy kis archive to storage blob'
  inputs:
    SourcePath: '$(Agent.TempDirectory)\latest.xml.gz'
    azureSubscription: '$(AzureSubscription)'
    Destination: 'AzureBlob'
    storage: '$(AzureStorageAccount)'
    ContainerName: '$(AzureStorageBlob)'



- task: PythonScript@0
  displayName: 'Start Data Import PIpeline'
  inputs:
    scriptSource: 'inline'
    script: |
      """Send a request to the Data Import Pipeline in order to trigger it"""
      import urllib.request

      hdr = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',
      'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
      'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
      'Accept-Encoding': 'none',
      'Accept-Language': 'en-US,en;q=0.8',
      'Connection': 'keep-alive'}

      url = '$(DataPipelineURL)'

      print('Sending request to pipeline...')

      pipeline_request = urllib.request.Request(url, headers=hdr)
      pipeline_response = urllib.request.urlopen(pipeline_request, timeout=60)

      print('Request sent!')